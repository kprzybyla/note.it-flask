[testenv]
basepython = python3.9
usedevelop = true

[dev]
envdir = {toxworkdir}/dev
deps = -rrequirements.txt
setenv =
    FLASK_APP=src/noteit/app
    FLASK_ENV=development
    POSTGRES_DB=main
    POSTGRES_HOST=localhost
    POSTGRES_PORT=5555
    POSTGRES_USER=root
    POSTGRES_PASSWORD=root

[compile]
envdir = {toxworkdir}/compile
deps = pip-tools

[format]
envdir = {toxworkdir}/format
deps = -rrequirements-format.txt

[test]
envdir = {toxworkdir}/test
deps =
    -rrequirements.txt
    -rrequirements-test.txt

[docker]
skipsdist = true
envdir = {toxworkdir}/docker
deps = docker-compose

[testenv:dev-run]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands = {envpython} -m flask run

[testenv:dev-manage]
envdir = {[dev]envdir}
deps = {[dev]deps}
setenv = {[dev]setenv}
commands = note.it {posargs}

[testenv:dev-db-up]
skipsdist = {[docker]skipsdist}
envdir = {[docker]envdir}
deps = {[docker]deps}
setenv = {[dev]setenv}
commands = docker-compose -f docker-compose.dev.yaml up -d

[testenv:dev-db-down]
skipsdist = {[docker]skipsdist}
envdir = {[docker]envdir}
deps = {[docker]deps}
setenv = {[dev]setenv}
commands = docker-compose -f docker-compose.dev.yaml down

[testenv:compile]
envdir = {[compile]envdir}
deps = {[compile]deps}
commands =
    pip-compile -r requirements.in
    pip-compile -r requirements-format.in
    pip-compile -r requirements-test.in

[testenv:black]
envdir = {[format]envdir}
deps = {[format]deps}
commands = {envpython} -m black {posargs:setup.py src tests}

[testenv:black-check]
envdir = {[format]envdir}
deps = {[format]deps}
commands = {envpython} -m black --check {posargs:setup.py src tests}

[testenv:lint]
envdir = {[format]envdir}
deps = {[format]deps}
commands = {envpython} -m flake8 {posargs:setup.py src tests}

[testenv:test]
envdir = {[test]envdir}
deps = {[test]deps}
commands = {envpython} -m pytest {posargs}

[testenv:test-cov]
envdir = {[test]envdir}
deps = {[test]deps}
commands = {envpython} -m pytest --cov=src --cov-report=term --cov-report=html {posargs}

[testenv:deploy]
skipsdist = {[docker]skipsdist}
envdir = {[docker]envdir}
deps = {[docker]deps}
setenv =
    POSTGRES_DB=main
    POSTGRES_USER=root
    POSTGRES_PASSWORD=root
commands =
    {envpython} setup.py bdist_wheel
    docker-compose up --build --force-recreate
